on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    paths:
      - './QueueMusicFacade/**'

jobs:
  verify:
    name: 'Verify QueueMusicFacade Package'
    runs-on: ubuntu-latest
    env:
      CI_GITHUB_PASSWORD: ${{ secrets.CI_GITHUB_PASSWORD }}
      CI_GITHUB_USERNAME: ${{ secrets.CI_GITHUB_USERNAME }}
      CI_GITHUB_REPOSITORY: ${{ secrets.CI_GITHUB_REPOSITORY }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 16
        uses: actions/setup-java@v2
        with:
          java-version: '16'
          distribution: 'adopt'
          cache: maven
      - name: 'Verify QueueMusicFacade'
        working-directory: ./QueueMusicFacade
        run: mvn --batch-mode --update-snapshots verify -Dmaven.test.skip -s ci-settings.xml

  test:
    name: 'Test QueueMusicFacade Package'
    runs-on: ubuntu-latest
    needs:
      - verify
    env:
      CI_GITHUB_PASSWORD: ${{ secrets.CI_GITHUB_PASSWORD }}
      CI_GITHUB_USERNAME: ${{ secrets.CI_GITHUB_USERNAME }}
      CI_GITHUB_REPOSITORY: ${{ secrets.CI_GITHUB_REPOSITORY }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 16
        uses: actions/setup-java@v2
        with:
          java-version: '16'
          distribution: 'adopt'
          cache: maven
      - name: 'Test QueueMusicFacade'
        working-directory: ./QueueMusicFacade
        run: mvn --batch-mode --update-snapshots test -s ci-settings.xml

  release:
    name: 'Release QueueMusicFacade Container'
    runs-on: ubuntu-latest
    env:
      CI_GITHUB_PASSWORD: ${{ secrets.CI_GITHUB_PASSWORD }}
      CI_GITHUB_USERNAME: ${{ secrets.CI_GITHUB_USERNAME }}
      CI_GITHUB_REPOSITORY: ${{ secrets.CI_GITHUB_REPOSITORY }}
      IMAGE_NAME: queuemusic-facade
    if: ${{ github.ref == 'refs/heads/main' }}
    needs:
      - test
    steps:
      - uses: actions/checkout@v2
      - name: 'Login Github Container Registry'
        run: echo $CI_GITHUB_PASSWORD | docker login ghcr.io -u $CI_GITHUB_USERNAME --password-stdin
      - name: 'Release QuMuSecurity Container'
        working-directory: ./QuMuSecurity
        run: |
          echo "NEW_VERSION=$(mvn -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec -q)"
          echo "IMAGE_TAG=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:$NEW_VERSION"
          docker build \
            --build-arg CI_GITHUB_USERNAME=${CI_GITHUB_USERNAME} \
            --build-arg CI_GITHUB_PASSWORD=${CI_GITHUB_PASSWORD} \
            --build-arg CI_GITHUB_REPOSITORY=${CI_GITHUB_REPOSITORY} \
            -t $IMAGE_TAG \
            .
