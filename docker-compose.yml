version: '3.9'

services:
  postgresql:
    image: postgres:latest
    env_file: .env
    restart: on-failure
    volumes:
      - queuemusic_postgresql:/var/lib/postgresql/data

  qumu-release:
    build:
      context: QuMu
      args:
        CI_GITHUB_USERNAME: ${CI_GITHUB_USERNAME}
        CI_GITHUB_PASSWORD: ${CI_GITHUB_PASSWORD}
        CI_GITHUB_REPOSITORY: ${CI_GITHUB_REPOSITORY}
      dockerfile: ./release.Dockerfile
    env_file: .env

  qumusecurity-release:
    build:
      context: QuMuSecurity
      args:
        CI_GITHUB_USERNAME: ${CI_GITHUB_USERNAME}
        CI_GITHUB_PASSWORD: ${CI_GITHUB_PASSWORD}
        CI_GITHUB_REPOSITORY: ${CI_GITHUB_REPOSITORY}
      dockerfile: ./release.Dockerfile
    env_file: .env

  queuemusicfacade:
    build:
      context: ./QueueMusicFacade
      args:
        CI_GITHUB_USERNAME: ${CI_GITHUB_USERNAME}
        CI_GITHUB_PASSWORD: ${CI_GITHUB_PASSWORD}
        CI_GITHUB_REPOSITORY: ${CI_GITHUB_REPOSITORY}
    env_file: .env
    restart: on-failure
    ports:
      - "8080:8080"
    command:
      - /opt/entrypoint.sh
      - -Dspring.profiles.active=prd

  spotifyfacade:
    build:
      context: ./SpotifyFacade
      args:
        CI_GITHUB_USERNAME: ${CI_GITHUB_USERNAME}
        CI_GITHUB_PASSWORD: ${CI_GITHUB_PASSWORD}
        CI_GITHUB_REPOSITORY: ${CI_GITHUB_REPOSITORY}
    env_file: .env
    restart: on-failure
    command:
      - /opt/entrypoint.sh
      - -Dspring.profiles.active=prd

volumes:
  queuemusic_postgresql: