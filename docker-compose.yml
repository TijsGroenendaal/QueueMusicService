version: '3.9'

services:
  postgresql:
    image: postgres:latest
    env_file: .env
    restart: on-failure
    volumes:
      - queuemusic_postgresql:/var/lib/postgresql/data

  queuemusicfacade:
    build:
      context: ./QueueMusicFacade
      args:
        CI_GITHUB_USERNAME: ${CI_GITHUB_USERNAME}
        CI_GITHUB_PASSWORD: ${CI_GITHUB_PASSWORD}
        CI_GITHUB_REPOSITORY: ${CI_GITHUB_REPOSITORY}
    env_file: .env
    restart: on-failure
    ports:
      - "8080:8080"
    command:
      - /opt/entrypoint.sh
      - -Dspring.profiles.active=prd

  spotifyfacade:
    build:
      context: ./SpotifyFacade
      args:
        CI_GITHUB_USERNAME: ${CI_GITHUB_USERNAME}
        CI_GITHUB_PASSWORD: ${CI_GITHUB_PASSWORD}
        CI_GITHUB_REPOSITORY: ${CI_GITHUB_REPOSITORY}
    env_file: .env
    restart: on-failure
    command:
      - /opt/entrypoint.sh
      - -Dspring.profiles.active=prd

  rabbitmq:
    image: rabbitmq:3.9-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    volumes:
      - ./ops/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./ops/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json

volumes:
  queuemusic_postgresql: